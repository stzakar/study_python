#  Первый опыт
# fast comment ctrl+/
msg1="Hello"
msg2="zak"
print(msg1)
print(msg2)
# оператор в python это ссылка на объект в памяти X=6
# x=1+2+3+4 Сначала выччислится значение через временные объекты (затем идет оочистка памяти от объектов на которые нет ссылки)
print (type(msg1))

# каскадное присвоение, ссылка на область в памяти
x=y=z=0
# множественное присвоение картэж переменных и картыж значений
x,y,z=1,2,3

a=2
b=3
tmp1=a
tmp2=b
a=tmp2
b=tmp1
# or
tmp1,tmp2=a,b
a,b=tmp2,tmp1
# or
a,b=b,a


# свойсво sep= (seporate) аналог IFS
# свойство end= по умолчанию равен \n 
print("Результат: ", 6, 15, ".", sep="|")
# объединение вывода
print("Результат: ", 6, 15, ".", sep="", end="")
print(" using option \"end=\"", end="!\n")
print("next line")
# более строгий вывод как и в bash 'в одинарных квч' 
print('only "" \n text \t TAB')

#-------------мат действия-------------#
print("Результат:",5+3)
a += 1
# *=
# /=
# //=
# %=
#остаток от деления
print("Результат:",5%2)
#(1)возвидение в квадрат
print("Результат:",10**2)
#(1)корень
print("Результат:",3**0.5)
#(1) a^2^3 выполняется унарные операциии спава на лево 2 ** 3 и возводится потом  a
print("Результат:",a**2**3)
# окуругление до целого //
print("Результат:",5/3)
print("Результат:",5//3)
#сравнение чисел
a==b
#-------------мат операции-------------#
# ф-ции min() max() 
# abs(-5) модуль 
# pow(5, 3) возвидение в степень 
# round (5 / 3) округляет числа
print("Результат:", min(1,2,5,7,-3,5))
print("Результат:", max(1,2,5,7,-3,5))
print("Результат:", abs(-3))
print("Результат:", pow(5,10))
print("Результат:", round(5/3))

# получить данные от пользователя

#input("Введите свой пароль: ")

print((-12)//5)
print(12//5)
c=3
f=c>5
print (type (f))